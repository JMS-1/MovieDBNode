{"version":3,"sources":["database/entities/genre.ts"],"names":[],"mappings":";;AAEA,mCAA2C;AAE9B,QAAA,cAAc,GAAG,QAAQ,CAAA;AAIzB,QAAA,WAAW,GAAsB;IAC1C,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,kDAAkD;IACvD,oBAAoB,EAAE,KAAK;IAC3B,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,qBAAqB;IAC9B,UAAU,EAAE;QACR,GAAG,EAAE;YACD,OAAO,EAAE,4CAA4C;YACrD,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,IAAI,EAAE;YACF,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,mCAAmC;YAC5C,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,QAAQ;SACjB;KACJ;IACD,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;CAC5B,CAAA;AAED,SAAgB,UAAU,CAAC,KAAe;IACtC,OAAO,KAAK,CAAA;AAChB,CAAC;AAFD,gCAEC;AAED,SAAgB,QAAQ,CAAC,SAAoB,EAAE,EAAU;IACrD,MAAM,OAAO,GAAa;QACtB,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,SAAS,CAAC,IAAI;KACvB,CAAA;IAED,OAAO,OAAO,CAAA;AAClB,CAAC;AAPD,4BAOC","file":"genre.js","sourcesContent":["import { IGenre, INewGenre } from 'movie-db-api'\n\nimport { ISchema, uniqueId } from './utils'\n\nexport const collectionName = 'genres'\n\nexport interface IDbGenre extends IGenre {}\n\nexport const GenreSchema: ISchema<IDbGenre> = {\n    $schema: 'http://json-schema.org/schema#',\n    $id: 'http://psimarron.net/schemas/movie-db/genre.json',\n    additionalProperties: false,\n    type: 'object',\n    message: 'Genre unvollständig',\n    properties: {\n        _id: {\n            message: 'Eindeutige Kennung fehlt oder ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        name: {\n            maxLength: 100,\n            message: 'Name nicht angegeben oder zu lang',\n            minLength: 1,\n            type: 'string',\n        },\n    },\n    required: ['_id', 'name'],\n}\n\nexport function toProtocol(genre: IDbGenre): IGenre {\n    return genre\n}\n\nexport function toEntity(container: INewGenre, id: string): IDbGenre {\n    const dbGenre: IDbGenre = {\n        _id: id,\n        name: container.name,\n    }\n\n    return dbGenre\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/src"}