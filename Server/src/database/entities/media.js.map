{"version":3,"sources":["database/entities/media.ts"],"names":[],"mappings":";;AAEA,mCAA2C;AAE9B,QAAA,cAAc,GAAG,QAAQ,CAAA;AAIzB,QAAA,WAAW,GAAsB;IAC1C,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,kDAAkD;IACvD,oBAAoB,EAAE,KAAK;IAC3B,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,sBAAsB;IAC/B,UAAU,EAAE;QACR,GAAG,EAAE;YACD,OAAO,EAAE,4CAA4C;YACrD,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,WAAW,EAAE;YACT,OAAO,EAAE,qBAAqB;YAC9B,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,QAAQ,EAAE;YACN,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,kBAAkB;YAC3B,IAAI,EAAE,QAAQ;SACjB;QACD,IAAI,EAAE;YACF,OAAO,EAAE,qCAAqC;YAC9C,IAAI,EAAE,SAAS;YACf,IAAI,EAAE;;;;;;;aAOL;SACJ;KACJ;IACD,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;CAC5B,CAAA;AAED,SAAgB,UAAU,CAAC,KAAe;IACtC,OAAO,KAAK,CAAA;AAChB,CAAC;AAFD,gCAEC;AAED,SAAgB,QAAQ,CAAC,KAAgB,EAAE,EAAU;IACjD,MAAM,OAAO,GAAa;QACtB,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,KAAK,CAAC,IAAI;KACnB,CAAA;IAED,IAAI,KAAK,CAAC,WAAW,EAAE;QACnB,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAA;KAC1C;IAED,IAAI,KAAK,CAAC,QAAQ,EAAE;QAChB,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAA;KACpC;IAED,OAAO,OAAO,CAAA;AAClB,CAAC;AAfD,4BAeC","file":"media.js","sourcesContent":["import { IMedia, INewMedia, mediaType } from 'movie-db-api'\n\nimport { ISchema, uniqueId } from './utils'\n\nexport const collectionName = 'medias'\n\nexport interface IDbMedia extends IMedia {}\n\nexport const MediaSchema: ISchema<IDbMedia> = {\n    $schema: 'http://json-schema.org/schema#',\n    $id: 'http://psimarron.net/schemas/movie-db/media.json',\n    additionalProperties: false,\n    type: 'object',\n    message: 'Medium unvollst채ndig',\n    properties: {\n        _id: {\n            message: 'Eindeutige Kennung fehlt oder ist ung체ltig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        containerId: {\n            message: 'Ablage ist ung체ltig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        position: {\n            maxLength: 100,\n            message: 'Standort zu lang',\n            type: 'string',\n        },\n        type: {\n            message: 'Medienart fehlt oder ist unzul채ssig',\n            type: 'integer',\n            enum: [\n                mediaType.BluRay,\n                mediaType.DVD,\n                mediaType.RecordedDVD,\n                mediaType.SuperVideoCD,\n                mediaType.Undefined,\n                mediaType.VideoCD,\n            ],\n        },\n    },\n    required: ['_id', 'type'],\n}\n\nexport function toProtocol(media: IDbMedia): IMedia {\n    return media\n}\n\nexport function toEntity(media: INewMedia, id: string): IDbMedia {\n    const dbMedia: IDbMedia = {\n        _id: id,\n        type: media.type,\n    }\n\n    if (media.containerId) {\n        dbMedia.containerId = media.containerId\n    }\n\n    if (media.position) {\n        dbMedia.position = media.position\n    }\n\n    return dbMedia\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/src"}