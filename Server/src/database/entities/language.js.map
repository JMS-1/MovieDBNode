{"version":3,"sources":["database/entities/language.ts"],"names":[],"mappings":";;AAIa,QAAA,cAAc,GAAG,WAAW,CAAA;AAI5B,QAAA,cAAc,GAAyB;IAChD,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,qDAAqD;IAC1D,oBAAoB,EAAE,KAAK;IAC3B,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,uBAAuB;IAChC,UAAU,EAAE;QACR,GAAG,EAAE;YACD,IAAI,EAAE,QAAQ;SACjB;QACD,IAAI,EAAE;YACF,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,mCAAmC;YAC5C,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,QAAQ;SACjB;KACJ;IACD,QAAQ,EAAE,CAAC,MAAM,CAAC;CACrB,CAAA;AAED,SAAgB,UAAU,CAAC,QAAqB;IAC5C,OAAO,QAAQ,CAAA;AACnB,CAAC;AAFD,gCAEC;AAED,SAAgB,QAAQ,CAAC,QAAsB,EAAE,EAAU;IACvD,MAAM,UAAU,GAAgB;QAC5B,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,QAAQ,CAAC,IAAI;KACtB,CAAA;IAED,OAAO,UAAU,CAAA;AACrB,CAAC;AAPD,4BAOC","file":"language.js","sourcesContent":["import { ILanguage, INewLanguage } from 'movie-db-api'\n\nimport { ISchema } from './utils'\n\nexport const collectionName = 'languages'\n\nexport interface IDbLanguage extends ILanguage {}\n\nexport const LanguageSchema: ISchema<IDbLanguage> = {\n    $schema: 'http://json-schema.org/schema#',\n    $id: 'http://psimarron.net/schemas/movie-db/language.json',\n    additionalProperties: false,\n    type: 'object',\n    message: 'Sprache unvollst√§ndig',\n    properties: {\n        _id: {\n            type: 'string',\n        },\n        name: {\n            maxLength: 100,\n            message: 'Name nicht angegeben oder zu lang',\n            minLength: 1,\n            type: 'string',\n        },\n    },\n    required: ['name'],\n}\n\nexport function toProtocol(language: IDbLanguage): ILanguage {\n    return language\n}\n\nexport function toEntity(language: INewLanguage, id: string): IDbLanguage {\n    const dbLanguage: IDbLanguage = {\n        _id: id,\n        name: language.name,\n    }\n\n    return dbLanguage\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/src"}