{"version":3,"sources":["database/entities/recording.ts"],"names":[],"mappings":";;AAAA,mCAAwE;AAE3D,QAAA,cAAc,GAAG,YAAY,CAAA;AAqB1C,MAAM,aAAa,GAAgC;IAC/C,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,uBAAuB;IAChC,UAAU,EAAE;QACR,WAAW,EAAE;YACT,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,0BAA0B;YACnC,IAAI,EAAE,QAAQ;SACjB;QACD,IAAI,EAAE;YACF,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,mCAAmC;YAC5C,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,QAAQ;SACjB;QACD,GAAG,EAAE;YACD,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,qBAAqB;YAC9B,IAAI,EAAE,QAAQ;SACjB;KACJ;IACD,QAAQ,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;CAC5B,CAAA;AAEY,QAAA,eAAe,GAA0B;IAClD,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,sDAAsD;IAC3D,oBAAoB,EAAE,KAAK;IAC3B,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,4BAA4B;IACrC,UAAU,EAAE;QACR,GAAG,EAAE;YACD,OAAO,EAAE,4CAA4C;YACrD,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,OAAO,EAAE;YACL,OAAO,EAAE,mCAAmC;YAC5C,OAAO,EAAE,eAAO;YAChB,IAAI,EAAE,QAAQ;SACjB;QACD,WAAW,EAAE;YACT,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,0BAA0B;YACnC,IAAI,EAAE,QAAQ;SACjB;QACD,MAAM,EAAE;YACJ,KAAK,EAAE;gBACH,OAAO,EAAE,oBAAoB;gBAC7B,OAAO,EAAE,gBAAQ;gBACjB,IAAI,EAAE,QAAQ;aACjB;YACD,OAAO,EAAE,sBAAsB;YAC/B,IAAI,EAAE,OAAO;YACb,WAAW,EAAE,IAAI;SACpB;QACD,SAAS,EAAE;YACP,KAAK,EAAE;gBACH,OAAO,EAAE,sBAAsB;gBAC/B,OAAO,EAAE,gBAAQ;gBACjB,IAAI,EAAE,QAAQ;aACjB;YACD,OAAO,EAAE,wBAAwB;YACjC,IAAI,EAAE,OAAO;YACb,WAAW,EAAE,IAAI;SACpB;QACD,KAAK,EAAE;YACH,KAAK,EAAE,aAAa;YACpB,OAAO,EAAE,wBAAwB;YACjC,IAAI,EAAE,OAAO;SAChB;QACD,KAAK,EAAE;YACH,OAAO,EAAE,gCAAgC;YACzC,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,IAAI,EAAE;YACF,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,mCAAmC;YAC5C,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,QAAQ;SACjB;QACD,MAAM,EAAE;YACJ,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,mBAAmB;YAC5B,IAAI,EAAE,QAAQ;SACjB;QACD,MAAM,EAAE;YACJ,OAAO,EAAE,oBAAoB;YAC7B,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;KACJ;IACD,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC;CAChF,CAAA","file":"recording.js","sourcesContent":["import { IObjectFieldSchema, ISchema, isoDate, uniqueId } from './utils'\n\nexport const collectionName = 'recordings'\n\nexport interface IDbLink {\n    description?: string\n    name: string\n    url: string\n}\n\nexport interface IDbRecording {\n    _id: string\n    created: string\n    description?: string\n    genres: string[]\n    languages: string[]\n    links: IDbLink[]\n    media: string\n    name: string\n    rentTo?: string\n    series?: string\n}\n\nconst LinkSubSchema: IObjectFieldSchema<IDbLink> = {\n    type: 'object',\n    message: 'Verweis unvollständig',\n    properties: {\n        description: {\n            maxLength: 2000,\n            message: 'Beschreibung ist zu lang',\n            type: 'string',\n        },\n        name: {\n            maxLength: 100,\n            message: 'Name nicht angegeben oder zu lang',\n            minLength: 1,\n            type: 'string',\n        },\n        url: {\n            maxLength: 2000,\n            message: 'Verweis ist zu lang',\n            type: 'string',\n        },\n    },\n    required: ['name', 'url'],\n}\n\nexport const RecordingSchema: ISchema<IDbRecording> = {\n    $schema: 'http://json-schema.org/schema#',\n    $id: 'http://psimarron.net/schemas/movie-db/recording.json',\n    additionalProperties: false,\n    type: 'object',\n    message: 'Aufzeichnung unvollständig',\n    properties: {\n        _id: {\n            message: 'Eindeutige Kennung fehlt oder ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        created: {\n            message: 'Zeitpunkt fehlt oder ist ungültig',\n            pattern: isoDate,\n            type: 'string',\n        },\n        description: {\n            maxLength: 2000,\n            message: 'Beschreibung ist zu lang',\n            type: 'string',\n        },\n        genres: {\n            items: {\n                message: 'Genre ist ungültig',\n                pattern: uniqueId,\n                type: 'string',\n            },\n            message: 'Genres sind ungültig',\n            type: 'array',\n            uniqueItems: true,\n        },\n        languages: {\n            items: {\n                message: 'Sprache ist ungültig',\n                pattern: uniqueId,\n                type: 'string',\n            },\n            message: 'Sprachen sind ungültig',\n            type: 'array',\n            uniqueItems: true,\n        },\n        links: {\n            items: LinkSubSchema,\n            message: 'Verweise sind ungültig',\n            type: 'array',\n        },\n        media: {\n            message: 'Medium fehlt oder ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        name: {\n            maxLength: 200,\n            message: 'Name nicht angegeben oder zu lang',\n            minLength: 1,\n            type: 'string',\n        },\n        rentTo: {\n            maxLength: 200,\n            message: 'Verleiher zu lang',\n            type: 'string',\n        },\n        series: {\n            message: 'Serie ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n    },\n    required: ['_id', 'name', 'created', 'media', 'genres', 'languages', 'links'],\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/src"}