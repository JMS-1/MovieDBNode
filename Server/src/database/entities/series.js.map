{"version":3,"sources":["database/entities/series.ts"],"names":[],"mappings":";;AAAA,mCAAkC;AAErB,QAAA,cAAc,GAAG,QAAQ,CAAA;AASzB,QAAA,YAAY,GAAG;IACxB,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,mDAAmD;IACxD,oBAAoB,EAAE,KAAK;IAC3B,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,qBAAqB;IAC9B,UAAU,EAAE;QACR,GAAG,EAAE;YACD,OAAO,EAAE,4CAA4C;YACrD,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,WAAW,EAAE;YACT,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,0BAA0B;YACnC,IAAI,EAAE,QAAQ;SACjB;QACD,IAAI,EAAE;YACF,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,mCAAmC;YAC5C,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,QAAQ;SACjB;QACD,QAAQ,EAAE;YACN,OAAO,EAAE,8BAA8B;YACvC,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;KACJ;IACD,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;CAC5B,CAAA","file":"series.js","sourcesContent":["import { uniqueId } from './utils'\n\nexport const collectionName = 'series'\n\nexport interface IDbSeries {\n    _id: string\n    name: string\n    description?: string\n    parentId?: string\n}\n\nexport const SeriesSchema = {\n    $schema: 'http://json-schema.org/schema#',\n    $id: 'http://psimarron.net/schemas/movie-db/series.json',\n    additionalProperties: false,\n    type: 'object',\n    message: 'Serie unvollständig',\n    properties: {\n        _id: {\n            message: 'Eindeutige Kennung fehlt oder ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        description: {\n            maxLength: 2000,\n            message: 'Beschreibung ist zu lang',\n            type: 'string',\n        },\n        name: {\n            maxLength: 50,\n            message: 'Name nicht angegeben oder zu lang',\n            minLength: 1,\n            type: 'string',\n        },\n        parentId: {\n            message: 'Übergeordnete Serie ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n    },\n    required: ['_id', 'name'],\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/src"}