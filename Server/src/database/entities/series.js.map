{"version":3,"sources":["database/entities/series.ts"],"names":[],"mappings":";;AAEA,mCAA2C;AAE9B,QAAA,cAAc,GAAG,QAAQ,CAAA;AAIzB,QAAA,YAAY,GAAuB;IAC5C,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,mDAAmD;IACxD,oBAAoB,EAAE,KAAK;IAC3B,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,qBAAqB;IAC9B,UAAU,EAAE;QACR,GAAG,EAAE;YACD,IAAI,EAAE,QAAQ;SACjB;QACD,WAAW,EAAE;YACT,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,0BAA0B;YACnC,IAAI,EAAE,QAAQ;SACjB;QACD,IAAI,EAAE;YACF,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,mCAAmC;YAC5C,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,QAAQ;SACjB;QACD,QAAQ,EAAE;YACN,OAAO,EAAE,8BAA8B;YACvC,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;KACJ;IACD,QAAQ,EAAE,CAAC,MAAM,CAAC;CACrB,CAAA;AAED,SAAgB,UAAU,CAAC,MAAiB;IACxC,OAAO,MAAM,CAAA;AACjB,CAAC;AAFD,gCAEC;AAED,SAAgB,QAAQ,CAAC,MAAkB,EAAE,EAAU;IACnD,MAAM,QAAQ,GAAc;QACxB,GAAG,EAAE,EAAE;QACP,IAAI,EAAE,MAAM,CAAC,IAAI;KACpB,CAAA;IAED,IAAI,MAAM,CAAC,WAAW,EAAE;QACpB,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAA;KAC5C;IAED,IAAI,MAAM,CAAC,QAAQ,EAAE;QACjB,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAA;KACtC;IAED,OAAO,QAAQ,CAAA;AACnB,CAAC;AAfD,4BAeC","file":"series.js","sourcesContent":["import { INewSeries, ISeries } from 'movie-db-api'\n\nimport { ISchema, uniqueId } from './utils'\n\nexport const collectionName = 'series'\n\nexport interface IDbSeries extends ISeries {}\n\nexport const SeriesSchema: ISchema<IDbSeries> = {\n    $schema: 'http://json-schema.org/schema#',\n    $id: 'http://psimarron.net/schemas/movie-db/series.json',\n    additionalProperties: false,\n    type: 'object',\n    message: 'Serie unvollständig',\n    properties: {\n        _id: {\n            type: 'string',\n        },\n        description: {\n            maxLength: 2000,\n            message: 'Beschreibung ist zu lang',\n            type: 'string',\n        },\n        name: {\n            maxLength: 50,\n            message: 'Name nicht angegeben oder zu lang',\n            minLength: 1,\n            type: 'string',\n        },\n        parentId: {\n            message: 'Übergeordnete Serie ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n    },\n    required: ['name'],\n}\n\nexport function toProtocol(series: IDbSeries): ISeries {\n    return series\n}\n\nexport function toEntity(series: INewSeries, id: string): IDbSeries {\n    const dbSeries: IDbSeries = {\n        _id: id,\n        name: series.name,\n    }\n\n    if (series.description) {\n        dbSeries.description = series.description\n    }\n\n    if (series.parentId) {\n        dbSeries.parentId = series.parentId\n    }\n\n    return dbSeries\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/src"}