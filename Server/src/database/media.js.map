{"version":3,"file":"media.js","sourceRoot":"","sources":["media.ts"],"names":[],"mappings":";;;;;AAAA,4CAAwE;AACxE,mCAAwC;AACxC,6CAAuC;AAEvC,sCAAgC;AAEnB,QAAA,eAAe,GAAG,IAAI,CAAC,KAAM,SAAQ,sBAAwB;IAAtC;;QACvB,SAAI,GAAG,sBAAc,CAAA;QAErB,WAAM,GAAG,mBAAW,CAAA;IAwBjC,CAAC;IAtBG,OAAO,CAAC,GAAQ;QACZ,MAAM,KAAK,GAAa;YACpB,GAAG,EAAE,GAAG,CAAC,EAAE;YACX,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;SAC/B,CAAA;QAED,IAAI,GAAG,CAAC,SAAS,EAAE;YACf,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAA;SAClC;QAED,IAAI,GAAG,CAAC,QAAQ,EAAE;YACd,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA;SAChC;QAED,MAAM,MAAM,GAAG,qBAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QAE3C,IAAI,MAAM,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAA;SAC1C;QAED,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;IAC7B,CAAC;CACJ,CAAC,EAAE,CAAA","sourcesContent":["import { collectionName, IDbMedia, MediaSchema } from './entities/media'\nimport { CollectionBase } from './utils'\nimport { validate } from './validation'\n\nexport * from './entities/media'\n\nexport const mediaCollection = new (class extends CollectionBase<IDbMedia> {\n    readonly name = collectionName\n\n    readonly schema = MediaSchema\n\n    fromSql(sql: any): void {\n        const media: IDbMedia = {\n            _id: sql.Id,\n            type: parseInt(sql.Type, 10),\n        }\n\n        if (sql.Container) {\n            media.container = sql.Container\n        }\n\n        if (sql.Position) {\n            media.position = sql.Position\n        }\n\n        const errors = validate(media, this.schema)\n\n        if (errors) {\n            throw new Error(JSON.stringify(errors))\n        }\n\n        this.cacheMigrated(media)\n    }\n})()\n"]}