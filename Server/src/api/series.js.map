{"version":3,"sources":["api/series.ts"],"names":[],"mappings":";;AAAA,qCAAgC;AAChC,+BAAiC;AAIjC,mCAA2C;AAE3C,+CAA2E;AAE9D,QAAA,SAAS,GAAG,gBAAM,EAAE,CAAC,GAAG,CACjC,SAAS,EACT,gBAAM,EAAE;KACH,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAClC,yBAAiB,CACb,KAAK,IAAI,EAAE;IACP,MAAM,MAAM,GAAG,MAAM,yBAAgB,CAAC,IAAI,EAAE,CAAA;IAE5C,OAAwB;QACpB,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,mBAAU,CAAC;KACjC,CAAA;AACL,CAAC,EACD,OAAO,EACP,QAAQ,CACX,CACJ;KACA,GAAG,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CACrC,yBAAiB,CACb,KAAK,EAAE,GAAe,EAAE,EAAE;IACtB,MAAM,MAAM,GAAG,iBAAQ,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;IAE/C,OAA8B;QAC1B,MAAM,EAAE,mBAAU,CAAC,MAAM,CAAC;QAC1B,MAAM,EAAE,MAAM,yBAAgB,CAAC,iBAAiB,CAAC,MAAM,CAAC;KAC3D,CAAA;AACL,CAAC,EACD,OAAO,EACP,QAAQ,CACX,CACJ;KACA,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CACnC,yBAAiB,CACb,KAAK,EAAE,GAAe,EAAE,EAAE;IACtB,MAAM,MAAM,GAAG,iBAAQ,CAAC,GAAG,EAAE,SAAI,EAAE,CAAC,CAAA;IAEpC,OAA8B;QAC1B,MAAM,EAAE,mBAAU,CAAC,MAAM,CAAC;QAC1B,MAAM,EAAE,MAAM,yBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC;KACnD,CAAA;AACL,CAAC,EACD,OAAO,EACP,QAAQ,CACX,CACJ,CACR,CAAA","file":"series.js","sourcesContent":["import { Router } from 'express'\nimport { v4 as uuid } from 'uuid'\n\nimport { INewSeries, ISeriesResponse, IUpdateSeriesResponse } from 'movie-db-api'\n\nimport { processApiRequest } from './utils'\n\nimport { seriesCollection, toEntity, toProtocol } from '../database/series'\n\nexport const seriesApi = Router().use(\n    '/series',\n    Router()\n        .get('/', (request, response, next) =>\n            processApiRequest(\n                async () => {\n                    const series = await seriesCollection.find()\n\n                    return <ISeriesResponse>{\n                        series: series.map(toProtocol),\n                    }\n                },\n                request,\n                response,\n            ),\n        )\n        .put('/:id', (request, response, next) =>\n            processApiRequest(\n                async (req: INewSeries) => {\n                    const series = toEntity(req, request.params.id)\n\n                    return <IUpdateSeriesResponse>{\n                        series: toProtocol(series),\n                        errors: await seriesCollection.findOneAndReplace(series),\n                    }\n                },\n                request,\n                response,\n            ),\n        )\n        .post('/', (request, response, next) =>\n            processApiRequest(\n                async (req: INewSeries) => {\n                    const series = toEntity(req, uuid())\n\n                    return <IUpdateSeriesResponse>{\n                        series: toProtocol(series),\n                        errors: await seriesCollection.insertOne(series),\n                    }\n                },\n                request,\n                response,\n            ),\n        ),\n)\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/src"}