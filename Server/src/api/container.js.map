{"version":3,"file":"container.js","sourceRoot":"","sources":["container.ts"],"names":[],"mappings":";;AAAA,qCAAgC;AAIhC,mCAA2C;AAE3C,qDAA2D;AAC3D,8DAA2D;AAE9C,QAAA,YAAY,GAAG,gBAAM,EAAE,CAAC,GAAG,CACpC,YAAY,EACZ,gBAAM,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAC1C,yBAAiB,CACb,KAAK,IAAI,EAAE;IACP,MAAM,UAAU,GAAG,MAAM,+BAAmB,CAAC,KAAK,EAAE,CAAA;IAEpD,OAA2B;QACvB,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,sBAAU,CAAC;KACzC,CAAA;AACL,CAAC,EACD,OAAO,EACP,QAAQ,CACX,CACJ,CACJ,CAAA","sourcesContent":["import { Router } from 'express'\n\nimport { IContainerResponse } from 'movie-db-api'\n\nimport { processApiRequest } from './utils'\n\nimport { containerCollection } from '../database/container'\nimport { toProtocol } from '../database/entities/container'\n\nexport const containerApi = Router().use(\n    '/container',\n    Router().get('/', (request, response, next) =>\n        processApiRequest(\n            async () => {\n                const containers = await containerCollection.query()\n\n                return <IContainerResponse>{\n                    containers: containers.map(toProtocol),\n                }\n            },\n            request,\n            response,\n        ),\n    ),\n)\n"]}