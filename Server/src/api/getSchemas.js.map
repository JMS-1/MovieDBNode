{"version":3,"file":"getSchemas.js","sourceRoot":"","sources":["getSchemas.ts"],"names":[],"mappings":";;AAAA,qCAAgC;AAIhC,mCAA2C;AAE3C,8DAAgE;AAChE,6CAA+C;AAC/C,mDAAqD;AACrD,6CAA+C;AAC/C,qDAAuD;AACvD,+CAAiD;AAEpC,QAAA,SAAS,GAAG,gBAAM,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAC1E,yBAAiB,CACb,GAAG,EAAE,CACD,CAAiB;IACb,SAAS,EAAE,2BAAe;IAC1B,KAAK,EAAE,mBAAW;IAClB,QAAQ,EAAE,yBAAc;IACxB,KAAK,EAAE,mBAAW;IAClB,SAAS,EAAE,2BAAe;IAC1B,MAAM,EAAE,qBAAY;CACvB,CAAA,EACL,OAAO,EACP,QAAQ,CACX,CACJ,CAAA","sourcesContent":["import { Router } from 'express'\n\nimport { ISchemaResponse } from 'movie-db-api'\n\nimport { processApiRequest } from './utils'\n\nimport { ContainerSchema } from '../database/entities/container'\nimport { GenreSchema } from '../database/genre'\nimport { LanguageSchema } from '../database/language'\nimport { MediaSchema } from '../database/media'\nimport { RecordingSchema } from '../database/recording'\nimport { SeriesSchema } from '../database/series'\n\nexport const getSchema = Router().get('/schemas', (request, response, next) =>\n    processApiRequest(\n        () =>\n            <ISchemaResponse>{\n                container: ContainerSchema,\n                genre: GenreSchema,\n                language: LanguageSchema,\n                media: MediaSchema,\n                recording: RecordingSchema,\n                series: SeriesSchema,\n            },\n        request,\n        response,\n    ),\n)\n"]}