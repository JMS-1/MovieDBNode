{"version":3,"sources":["../src/database/entities/recording.ts"],"names":[],"mappings":";;AAAA,mCAA2C;AAE9B,QAAA,cAAc,GAAG,YAAY,CAAA;AAsB7B,QAAA,eAAe,GAAG;IAC3B,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,sDAAsD;IAC3D,oBAAoB,EAAE,KAAK;IAC3B,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,4BAA4B;IACrC,UAAU,EAAE;QACR,OAAqB,EAAE;YACnB,OAAO,EAAE,4CAA4C;YACrD,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,WAAyB,EAAE;YACvB,OAAO,EAAE,mCAAmC;YAC5C,OAAO,EAAE,eAAO;YAChB,IAAI,EAAE,QAAQ;SACjB;QACD,eAA6B,EAAE;YAC3B,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,0BAA0B;YACnC,IAAI,EAAE,QAAQ;SACjB;QACD,SAAuB,EAAE;YACrB,OAAO,EAAE,gCAAgC;YACzC,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,QAAsB,EAAE;YACpB,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,mCAAmC;YAC5C,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,QAAQ;SACjB;QACD,UAAwB,EAAE;YACtB,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,mBAAmB;YAC5B,IAAI,EAAE,QAAQ;SACjB;QACD,UAAwB,EAAE;YACtB,OAAO,EAAE,oBAAoB;YAC7B,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;KACJ;IACD,QAAQ,EAAE,mCAA2F;CACxG,CAAA","file":"recording.js","sourcesContent":["import { isoDate, uniqueId } from './utils'\n\nexport const collectionName = 'Recordings'\n\nconst enum RecordingFields {\n    _id = '_id',\n    created = 'created',\n    description = 'description',\n    media = 'media',\n    name = 'name',\n    rentTo = 'rentTo',\n    series = 'series',\n}\n\nexport interface IDbRecording {\n    [RecordingFields._id]: string\n    [RecordingFields.created]: string\n    [RecordingFields.description]?: string\n    [RecordingFields.media]: string\n    [RecordingFields.name]: string\n    [RecordingFields.rentTo]?: string\n    [RecordingFields.series]?: string\n}\n\nexport const RecordingSchema = {\n    $schema: 'http://json-schema.org/schema#',\n    $id: 'http://psimarron.net/schemas/movie-db/recording.json',\n    additionalProperties: false,\n    type: 'object',\n    message: 'Aufzeichnung unvollständig',\n    properties: {\n        [RecordingFields._id]: {\n            message: 'Eindeutige Kennung fehlt oder ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        [RecordingFields.created]: {\n            message: 'Zeitpunkt fehlt oder ist ungültig',\n            pattern: isoDate,\n            type: 'string',\n        },\n        [RecordingFields.description]: {\n            maxLength: 2000,\n            message: 'Beschreibung ist zu lang',\n            type: 'string',\n        },\n        [RecordingFields.media]: {\n            message: 'Medium fehlt oder ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        [RecordingFields.name]: {\n            maxLength: 200,\n            message: 'Name nicht angegeben oder zu lang',\n            minLength: 1,\n            type: 'string',\n        },\n        [RecordingFields.rentTo]: {\n            maxLength: 200,\n            message: 'Verleiher zu lang',\n            type: 'string',\n        },\n        [RecordingFields.series]: {\n            message: 'Serie ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n    },\n    required: [RecordingFields._id, RecordingFields.name, RecordingFields.created, RecordingFields.media],\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/build"}