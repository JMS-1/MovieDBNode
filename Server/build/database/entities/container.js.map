{"version":3,"sources":["../src/database/entities/container.ts"],"names":[],"mappings":";;AAEA,mCAAkC;AAErB,QAAA,cAAc,GAAG,YAAY,CAAA;AAoB7B,QAAA,eAAe,GAAG;IAC3B,OAAO,EAAE,gCAAgC;IACzC,GAAG,EAAE,sDAAsD;IAC3D,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,sBAAsB;IAC/B,UAAU,EAAE;QACR,OAAqB,EAAE;YACnB,OAAO,EAAE,4CAA4C;YACrD,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,eAA6B,EAAE;YAC3B,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,0BAA0B;YACnC,IAAI,EAAE,QAAQ;SACjB;QACD,QAAsB,EAAE;YACpB,SAAS,EAAE,EAAE;YACb,OAAO,EAAE,mCAAmC;YAC5C,SAAS,EAAE,CAAC;YACZ,IAAI,EAAE,QAAQ;SACjB;QACD,YAA0B,EAAE;YACxB,OAAO,EAAE,+BAA+B;YACxC,OAAO,EAAE,gBAAQ;YACjB,IAAI,EAAE,QAAQ;SACjB;QACD,kBAAgC,EAAE;YAC9B,SAAS,EAAE,GAAG;YACd,OAAO,EAAE,2BAA2B;YACpC,IAAI,EAAE,QAAQ;SACjB;QACD,QAAsB,EAAE;YACpB,OAAO,EAAE,qCAAqC;YAC9C,IAAI,EAAE,SAAS;YACf,IAAI,EAAE;;;;;;;aAOL;SACJ;KACJ;IACD,QAAQ,EAAE,uBAAiE;CAC9E,CAAA","file":"container.js","sourcesContent":["import { containerType } from 'movie-db-api'\n\nimport { uniqueId } from './utils'\n\nexport const collectionName = 'containers'\n\nconst enum ContainerFields {\n    _id = '_id',\n    name = 'name',\n    type = 'type',\n    description = 'description',\n    parentId = 'parentId',\n    parentLocation = 'parentLocation',\n}\n\nexport interface IDbContainer {\n    [ContainerFields._id]: string\n    [ContainerFields.name]: string\n    [ContainerFields.type]: number\n    [ContainerFields.description]?: string\n    [ContainerFields.parentId]?: string\n    [ContainerFields.parentLocation]?: string\n}\n\nexport const ContainerSchema = {\n    $schema: 'http://json-schema.org/schema#',\n    $id: 'http://psimarron.net/schemas/movie-db/container.json',\n    type: 'object',\n    message: 'Ablage unvollständig',\n    properties: {\n        [ContainerFields._id]: {\n            message: 'Eindeutige Kennung fehlt oder ist ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        [ContainerFields.description]: {\n            maxLength: 2000,\n            message: 'Beschreibung ist zu lang',\n            type: 'string',\n        },\n        [ContainerFields.name]: {\n            maxLength: 50,\n            message: 'Name nicht angegeben oder zu lang',\n            minLength: 1,\n            type: 'string',\n        },\n        [ContainerFields.parentId]: {\n            message: 'Übergeordnete Ablage ungültig',\n            pattern: uniqueId,\n            type: 'string',\n        },\n        [ContainerFields.parentLocation]: {\n            maxLength: 100,\n            message: 'Ablagebezeichnung zu lang',\n            type: 'string',\n        },\n        [ContainerFields.type]: {\n            message: 'Ablageart fehlt oder ist unzulässig',\n            type: 'integer',\n            enum: [\n                containerType.Box,\n                containerType.Disk,\n                containerType.FeatureSet,\n                containerType.Folder,\n                containerType.Shelf,\n                containerType.Undefined,\n            ],\n        },\n    },\n    required: [ContainerFields._id, ContainerFields.name, ContainerFields.type],\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/build"}