{"version":3,"sources":["../src/startup.ts"],"names":[],"mappings":";;AAAA,+BAA8B;AAC9B,mCAAkC;AAClC,+BAA2B;AAE3B,+BAAkC;AAClC,yCAA+C;AAC/C,mCAAkC;AAElC,KAAK,UAAU,OAAO;IAClB,MAAM,6BAAkB,EAAE,CAAA;IAI1B,MAAM,GAAG,GAAG,OAAO,EAAE,CAAA;IAErB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,WAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC,CAAA;IAEnD,gBAAU,CAAC,GAAG,CAAC,CAAA;IAEf,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AAChC,CAAC;AAED,SAAS,YAAY,CAAC,KAAU;IAC5B,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,gBAAQ,CAAC,KAAK,CAAC,CAAC,CAAA;AAC3C,CAAC;AAED,IAAI;IACA,OAAO,EAAE;SACJ,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC;SAC7B,KAAK,CAAC,YAAY,CAAC,CAAA;CAC3B;AAAC,OAAO,KAAK,EAAE;IACZ,YAAY,CAAC,KAAK,CAAC,CAAA;CACtB","file":"startup.js","sourcesContent":["import * as debug from 'debug'\nimport * as express from 'express'\nimport { join } from 'path'\n\nimport { installApi } from './api'\nimport { initializeDatabase } from './database'\nimport { getError } from './utils'\n\nasync function startup(): Promise<void> {\n    await initializeDatabase()\n\n    // await runMigration()\n\n    const app = express()\n\n    app.use(express.static(join(__dirname, '../dist')))\n\n    installApi(app)\n\n    app.listen(process.env.PORT)\n}\n\nfunction startupError(error: any): void {\n    debug('startup')('%s', getError(error))\n}\n\ntry {\n    startup()\n        .then(undefined, startupError)\n        .catch(startupError)\n} catch (error) {\n    startupError(error)\n}\n"],"sourceRoot":"/home/jochenmanns/Software/git/MovieDBNode/Server/build"}